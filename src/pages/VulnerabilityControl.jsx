import {
  Box,
  Button,
  Container,
  Flex,
  Grid,
  Heading,
  Link,
  Select,
  Spinner,
  Text,
} from "@chakra-ui/react";
import React, { useEffect, useState } from "react";
import { useParams } from "react-router-dom";
import axios from "axios";
import { FaStar, FaStarHalf } from "react-icons/fa6";

const VulnerabilityControl = () => {
  const [results, setResults] = useState();
  const [loading, setLoading] = useState(true);

  let { productName } = useParams();

  const [filteringValue, setFilteringValue] = useState(
    productName || "smart door bells"
  );

  const handleFilter = (e) => {
    // console.log();
    setFilteringValue(e.target.value);
  };
  const fetchVulnerabilities = async () => {
    setLoading(true)
    const options = {
      method: "GET",
      url: "https://google-search74.p.rapidapi.com/",
      params: {
        query: `${filteringValue} vulnerability control measures`,
        limit: "20",
        related_keywords: "true",
      },
      headers: {
        "X-RapidAPI-Key":
          "3212423239msh31eb2c53aad051dp1e7cbcjsn269648a75709",
        "X-RapidAPI-Host": "google-search74.p.rapidapi.com",
      },
    };

    try {
      const response = await axios.request(options);
      console.log(response.data);
      setResults(response.data.results);
    } catch (error) {
      console.error(error);
    }
    setLoading(false);
  };
  useEffect(() => {
    fetchVulnerabilities();
  }, [filteringValue]);

  return (
    <Container
      position={"relative"}
      pt={28}
      pb="12"
      maxW={{ base: "90vw", sm: "85vw", md: "80vw", lg: "75vw" }}
      mx="auto"
    >
      <Flex gap="4" alignItems={"center"}>
        <Text fontWeight={"semibold"} mb="0">
          Filter:
        </Text>
        <Select
          maxW="20rem"
          cursor={"pointer"}
          onChange={(e) => handleFilter(e)}
        >
          <option value="smart door bells">Smart Door Bells</option>
          <option value="smart thermostat">Smart Thermostat</option>
        </Select>
      </Flex>
      <Heading mb="8" textTransform={"capitalize"}>
        {filteringValue} Vulnerability Control Measures
      </Heading>
      {loading ? (
        <Grid minH={"15rem"} placeItems={"center"}>
          <Spinner size={"xl"} />
        </Grid>
      ) : (
        <Flex flexDir={"column"} gap="4">
          {results.map(({ position, url, title, description }) => (
            <Box key={position}>
              <Link
                href={url}
                fontWeight={"semibold"}
                target="_blank"
                color={"primary"}
                fontSize={"1.2rem"}
              >
                {title}
              </Link>
              <Text>{description}</Text>
            </Box>
          ))}
        </Flex>
      )}
      
    </Container>
  );
};

export default VulnerabilityControl;
